export const INTERVIEW_CONTENT = [
    { title: '<b>What is Vue</b> js and how does it differ from other JavaScript frameworks? ', content: 'Vue. js is a progressive JavaScript framework for building user interfaces. It differs from other frameworks by its approach to data binding, reactivity, and component based architecture.' },
    { title: 'What are the <b>advantages of using Vue. js</b> for web development?', content: 'Vue. js offers several advantages including ease of use. Flexibility. Performance. And a smaller learning curve compared to other frameworks. It also provides excellent documentation, a thriving community, and a rich set of features.' },
    {title: 'What is a <b>Vue. js (directive)</b> and how is it used?', content:'What is a Vue. js directive and how is it used? A directive in Vue. js is a special attribute that allows you to apply reactive behavior to the DOM. Examples include vbind, vif, vfor, and von. Directives are used in templates to bind data, conditionally render content, and handle user events.'},
    {title: 'What is a <b>Vue. js component</b> and how is it created?', content:'A component in Vue. js is a reusable piece of code that encapsulates HTML. CSS, and JavaScript logic. It can be used to build complex user interfaces by breaking them down into smaller, manageable pieces.Components can be created using a template or a render function and registered globally or locally'},
    {title: 'What is a <b>Vue. js template</b> and how is it used?', content:`A template in Vue. js is a piece of HTML that defines the structure. And content of a component. It can contain directives, bindings, and expressions that are rendered dynamically based on the component's Data templates can be written in HTML or in view JS specific syntax using the template tag.`},
    {title: 'What is <b>Vue. js virtual DOM</b> and how does it improve performance?', content:`Vue JS Virtual DOM is a lightweight representation of the actual DOM. It is used to track changes to the component's data and update the actual DOM only when necessary, resulting in faster rendering and better performance. The virtual DOM also simplifies the process of creating reactive components and makes it easier to reason about the application state.`},
    {title: 'What is a <b>Vue. js lifecycle</b> hook and how is it used?', content:`Vue. js lifecycle hooks are special methods that allow you to run code at specific stages of a component's lifecycle. Common examples include created, mounted, updated, and destroyed hooks.`},
    {title: 'What is <b>Vuex and how is it used in Vue. js</b> applications?', content:`Vuex is a state management pattern and library for Vue. js applications. It allows you to centralize your application's state in one place and manage it with mutations, actions, and getters.`},
    {title: 'What is the <b>difference between props and state in Vue. js</b>?', content:'Props are used to pass data from a parent component to a child component, while state is used to manage data within a single component.'},
    {title: 'What is <b>Vue. js computed property</b> and how is it used a computed property?', content:' view JS is a function that returns at computed value based on other properties. It allows you to perform complex logic and update your UI automatically when the underlying data changes.'},
    {title: 'What is the <b>difference between v-bind and v-model in Vue. js</b>?', content:`V bind is used to bind a value to an attribute or property. While vmodel is used for two way data binding between a form input element and a component's data.`},
    {title: 'What is Vue. js <b>v-if and v-show</b> directives and how do they differ?', content:'v-if is used to conditionally render an element based on a boolean expression. While v-show is used to toggle the visibility of an element based on a boolean value. v-show will always render the element in the DOM, while v-if will only render the element if the condition is true.'},
    {title: 'What is Vue js <b>event handling</b> and how is it implemented?', content:'View. js event handling is a way to trigger a method or function when an event occurs. This is done using the v-on directive in the HTML template.'},
    {title: 'What is Vue. js <b>slot</b> and how is it used? ', content:'Vue JS slot is a way to pass content from a parent component to a child component. This is done using the slot element in the child component.'},
    {title: 'What is Vue. js <b>mixin</b and how is it used? ', content:'Vue JS Mixin is a way to reuse code across multiple components. This is done by defining a Mixin object, and then using the Mixins property in the component to add the Mixin. '},
    {title: 'What is the <b>difference between Vue. js instance and Vue js component</b>?', content:'View. js instance is a standalone instance of a View application. While a Vue. js component is a reusable piece of code that can be used in multiple instances of a Vue application.'},
    {title: 'What is <b>Vue. js custom directive</b> and how is it created?', content:'Vue. js custom directive is a way to extend the functionality of the v-model directive. This is done by defining a directive object and then using the view do directive method to register the directive.'},
    {title: 'What is the Vue. JS <b>transition</b> component and how is it used?', content:'View do? JS transition component is a way to animate elements when they inserted. or removed from the DOM.This is done using the transition, element, and CSS classes to define the animation. '},
    {title: 'What is the Vue. js <b>KeepAlive component</b> and how is it used?', content:`Vue js KeepAlive is a built in component that caches a component And its state, when it's toggled out of Vue. It can be used to improve performance and maintain the state of the component.`},
    {title: 'What is Vue. js <b>Watch property</b> and how is it used?', content:'Vue. js Watch is a feature that allows you to watch for changes in a data property and execute a function when that property changes. It can be used to perform actions based on changes in data and update the UI accordingly.'},
    {title: 'What is <b>Vue. js filter</b> and how is it used?', content:'View JS filter is a feature that allows you to format data before rendering it in the ui. It can be used to format dates, numbers. or any other data type based on specific requirements. '},
    {title: 'What is the <b>Vue. js router</b> and how is it used?', content:'Vue js router is a plugin that provides routing capabilities to a Vue. js application.It can be used to navigate between different views or pages of the application without a full page refresh.'},
    {title: 'What is Vue. js <b>server side rendering</b> and how is it implemented?', content:'Vue. js server side rendering is a technique that allows you to render your Vue. js application on the server instead of the client. It can improve performance and SEO. It is implemented using Node. js and a server side rendering plugin.'},
    {title: 'What is the <b>difference between Vue. js and React</b>?', content:'Vue. js and React are both popular JavaScript frameworks for building user interfaces. Vue. js is a full featured framework with a smaller learning curve, while React is more focused on the view layer and requires a more complex setup. Vue. js has a simpler syntax. While React uses a more functional approach to building components.'},
    {title: 'What is <b>Vuex in Vue. js</b> and how is it used?', content:'Vuex is a state management pattern and library for Vue. js applications. It provides a centralized store for managing the state of the application and allows for predictable state updates through a strict set of rules. It is used to manage complex state interactions in larger applications.'},
    {title: '', content:''},
  ]